# === Controller-Specific Configuration ===

# === Basic Broker Settings ===
log.dirs=/var/lib/kafka/data1
num.partitions=3
offsets.topic.replication.factor=3
transaction.state.log.replication.factor=3
transaction.state.log.min.isr=2
log.retention.hours=168
log.segment.bytes=1073741824
log.retention.check.interval.ms=300000
message.max.bytes=1199925856
replica.fetch.max.bytes=1199925856
max.request.size=1199925856
connections.max.idle.ms=3600000 
request.timeout.ms=3600000 
retries=20
retry.backoff.ms=6000
transaction.state.log.segment.bytes=1199925856
socket.request.max.bytes=1199925856
replica.fetch.response.max.bytes=1199925856
log.index.size.max.bytes=1199925856

# === KRaft Mode Configurations ===
process.roles=broker,controller
node.id=1
controller.quorum.bootstrap.servers=172.16.10.1:9091,172.16.10.2:9091,172.16.10.3:9091
controller.quorum.voters=1@172.16.10.1:9091,2@172.16.10.2:9091,3@172.16.10.3:9091
controller.listener.names=CONTROLLER
listeners=CONTROLLER://172.16.10.1:9091
advertised.listeners=CONTROLLER://kafka1:9091
inter.broker.listener.name=INTERNAL
cluster.id=123e4567-e89b-12d3-a456-426614174001

# === Listener Security Protocol Map ===
listener.security.protocol.map=CONTROLLER:SASL_SSL,INTERNAL:SASL_SSL

# === SSL Configurations ===
ssl.protocol=TLSv1.3
ssl.enabled.protocols=TLSv1.3
ssl.cipher.suites=TLS_AES_256_GCM_SHA384,TLS_CHACHA20_POLY1305_SHA256,TLS_AES_128_GCM_SHA256
ssl.endpoint.identification.algorithm=

# === Keystore and Truststore Settings ===
ssl.keystore.type=PKCS12
ssl.keystore.location=/opt/kafka/config/ssl/kafka1.keystore.p12
ssl.keystore.password=NeloNELO123456789
ssl.key.password=NeloNELO123456789

ssl.truststore.type=PKCS12
ssl.truststore.location=/opt/kafka/config/ssl/kafka1.truststore.p12
ssl.truststore.password=NeloNELO123456789

# === SASL Configuration for CONTROLLER Listener ===
listener.name.CONTROLLER.sasl.enabled.mechanisms=GSSAPI
listener.name.CONTROLLER.sasl.kerberos.service.name=kafka
listener.name.CONTROLLER.gssapi.sasl.jaas.config=com.sun.security.auth.module.Krb5LoginModule required \
    useKeyTab=true \
    storeKey=true \
    doNotPrompt=true \
    debug=true \
    useTicketCache=false \
    refreshKrb5Config=true \
    keyTab="/root/.ssh/kafka_keytabs/kafka1.keytab" \
    principal="kafka/kafka1@EXAMPLE.COM";

# === Authorizer ===
authorizer.class.name=org.apache.kafka.metadata.authorizer.StandardAuthorizer
allow.everyone.if.no.acl.found=false
authorizer.metadata.manager.class.name=org.apache.kafka.metadata.authorizer.KafkaAclAuthorizerMetadataManager

# === Disable Remote Log Metadata Manager ===
remote.log.metadata.manager.class.path=
remote.log.storage.system.enable=false

# === ACL Settings ===
super.users=User:admin/admin@EXAMPLE.COM,User:kafka/kafka1@EXAMPLE.COM,User:kafka/kafka2@EXAMPLE.COM,User:kafka/kafka3@EXAMPLE.COM

# === Controller and Raft Settings ===
controller.request.timeout.ms=150000
controller.socket.timeout.ms=150000
controller.replication.retry.backoff.ms=15000
controller.election.timeout.ms=15000
controller.quorum.voters.retry.backoff.ms=6000

metadata.cache.max.size=50971520
raft.leader.election.timeout.ms=150000
metadata.max.age.ms=150000
raft.fetch.wait.max.ms=15000

# === TLS Handshake Timeout ===
ssl.handshake.timeout.ms=150000

# === SASL Kerberos Timeout Settings ===
sasl.kerberos.min.time.before.relogin=300000
sasl.login.retry.backoff.ms=5000
sasl.login.retry.backoff.max.ms=6000
sasl.kerberos.ticket.renew.window.factor=0.8

# === SSL Session Timeout ===
ssl.session.timeout.ms=600000

# === Replica and Connection Settings ===
replica.fetch.wait.max.ms=6000
connections.request.timeout.ms=600000
replica.lag.time.max.ms=20000
replica.fetch.min.bytes=2
fetch.max.wait.ms=6000
controller.replication.timeout.ms=60000
raft.replication.timeout.ms=10000
log.cleaner.io.max.bytes.per.second=2048576
offsets.commit.required.acks=-1

# === Network and TLS Enhancements ===
tcp.keepalive=true
ssl.server.name.indication.enabled=true
ssl.session.ticket.enabled=true
ssl.extended.master.secret.required=true
ssl.renegotiation.supported=true
ssl.certificate.authorities.list=true
ssl.max.fragment.length=4096

# === SSL Principal Mapping Rules ===
ssl.principal.mapping.rules=RULE:^C=US, ST=state, L=locality, O=kafka, OU=kafka, CN=(.*?)$/$1/,DEFAULT

# === Supported SSL Extensions ===
ssl.supported.extensions=ec_point_formats,status_request_v2,extended_master_secret,session_ticket,renegotiation_info,supported_versions,key_share,application_layer_protocol_negotiation,server_name,max_fragment_length,certificate_authorities,signature_algorithms_cert
